name: Phantombuster CD

on:
  push:
    branches:
      - main

env:
    PHANTOM_BUSTER_API_KEY: ${{ secrets.PHANTOM_BUSTER_API_KEY }}

jobs:
  check-secrets:
    runs-on: ubuntu-latest
    outputs:
      is_available: ${{ steps.check.outputs.test }}
    steps:
      - id: check
        run: echo "is_available=${{ secrets.PHANTOM_BUSTER_API_KEY != '' }}" >> "$GITHUB_OUTPUT"
  deploy:
    name: Deploy
    needs: check-secrets
    if: ${{ needs.check-secrets.outputs.is_available == 'true' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version-file: '.nvmrc'
      - uses: pnpm/action-setup@v4
        with:
          version: 9
          run_install: true
      - name: Extract script name from package.json
        uses: sergeysova/jq-action@v2
        id: scriptName
        with:
          cmd: 'jq .name package.json -r'
      - name: Create phantombuster.cson
        run: |
          echo "[
            name: 'phantom-buster-scripts'
            apiKey: '$(echo ${{ secrets.PHANTOM_BUSTER_API_KEY }} | sed 's/./& /g' | sed 's/ //g')'
            scripts:
              '${{ steps.scriptName.outputs.value }}.js': 'dist/main.js'
          ]" > phantombuster.cson
      - name: Deploy
        run: |
          pnpm run deploy &
          DEPLOY_PID=$!
          pnpm build
          sleep 4
          kill $DEPLOY_PID
          echo "Deployment complete"
